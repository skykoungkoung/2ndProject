<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="approval">

	<!-- 4번 -->
	<!-- appForm 새 결재 DB 저장하자. -->
	<insert id="insertApp" parameterType="approvalDTO">
		<selectKey keyProperty="appNum" order="BEFORE" resultType="int">
			select approval_seq.nextval from dual 
		</selectKey>
		insert into approval(appNum, appType, userId, dept, id1, id2, id3, appStart, appFinish, appTitle, appContent, appRequest, appDate, state1, state2, state3, code, name) 
		values(approval_seq.nextval,#{appType},#{userId},#{dept},#{id1},#{id2},#{id3},#{appStart},#{appFinish},#{appTitle},#{appContent},#{appRequest},sysdate,0,0,0,#{code},#{name})
	</insert>
	
	<!-- name에 내 userI에 해당하는 이름 넣는 용 -->
	<select id="selectName" parameterType="ApprovalDTO" resultType="String">
		select name from users where userId=#{userId}
	</select>
	 
	
	 
	 <!-- 받은 결재함에 userId 대신 name 가져오기  -->
	<select id="getId" parameterType="String" resultType="String">
		select name from users where userId=#{value}
	</select>
	
	<update id="id1" parameterType="Hashmap">
		update approval set name1 = #{name1} where id1=#{id1}
	</update>
	
	
	
	
	
	
	<!-- 보낸 결재함 전체 글 -->
	<select id="countAll" parameterType="approvalDTO" resultType="int">
		select count(*) from approval where code = #{code} and userId=#{userId}
	</select>
	<!-- 페이징 -->
	<select id="getApprovals" parameterType="hashmap" resultType="approvalDTO">
		<![CDATA[
		select * from (select rownum rnum, approval.* from 
		(select * from approval where userId=#{userId} and code=#{code} order by appNum desc) approval) 
				where rnum >= #{start} and rnum <=#{end}
		]]>		
	</select>
	
	<!-- 글 상세 페이지 -->
	<select id="getOneApproval" parameterType="int" resultType="approvalDTO">
		select * from approval where appNum = #{value}
	</select>
	
	<!-- 결재 페이지 수정  -->
	<update id="updateApp" parameterType="approvalDTO">
		update approval set appTitle=#{appTitle}, appContent=#{appContent}, appRequest=#{appRequest} where appNum=#{appNum}
	</update>
	
	<!-- 결재 페이지 삭제  -->
	<delete id="deleteApp" parameterType="int">
		delete from approval where appNum=#{appNum}
	</delete>
	
<!-- ///////////////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 받은 결재함 전체 글 -->
	<select id="takeCountAll" parameterType="approvalDTO" resultType="int">
		select count(*) from approval where code = #{code} and id1=#{userId} or id2=#{userId} or id3=#{userId}
	</select>
	
	<!-- 페이징 -->
	<select id="takeApprovals" parameterType="hashmap" resultType="approvalDTO">
		<![CDATA[
		select * from (select rownum rnum, approval.* from 
		(select * from approval where code=#{code} and id1=#{userId} or id2=#{userId} or id3=#{userId} order by appNum desc) approval) 
				where rnum >= #{start} and rnum <=#{end}
		]]>		
	</select>
	
	
	<!--보낸 결재함 검색 -->
	<select id="countSearch" parameterType="hashmap" resultType="int">
		select count(*) from approval where code = #{code} and userId=#{userId} and ${sel} like '%'||#{search}||'%'
	</select>

	<select id="sendSearchApprovals" parameterType="hashmap" resultType="approvalDTO">
		<![CDATA[
		select * from (select rownum rnum, approval.* from 
		(select * from approval where code = #{code} and userId=#{userId} and ${sel} like '%'||#{search}||'%' order by appNum desc) approval) 
				where rnum >= #{start} and rnum <=#{end}
		]]>
	</select>
	
	<!--받은 결재함 검색 -->
	<select id="takeCountSearch" parameterType="hashmap" resultType="int">
		select count(*) from approval where code = #{code} and (id1=#{userId} or id2=#{userId} or id3=#{userId}) and ${sel} like '%'||#{search}||'%'
	</select>

	<select id="takeSearchApprovals" parameterType="hashmap" resultType="approvalDTO">
		<![CDATA[
		select * from (select rownum rnum, approval.* from 
		(select * from approval where code = #{code} and (id1=#{userId} or id2=#{userId} or id3=#{userId}) and ${sel} like '%'||#{search}||'%' order by appNum desc) approval) 
				where rnum >= #{start} and rnum <=#{end}
		]]>
	</select>
	
	<!-- 글 상세 페이지 -->
	<select id="takeOneApproval" parameterType="int" resultType="approvalDTO">
		select * from approval where appNum = #{value}
	</select>
	<!-- 반려 사유 삽입 -->
	<update id="insertReject" parameterType="approvalDTO">
		update approval set reject=#{reject} where appNum=#{appNum}
	</update>
	
	
	<!-- 승인 -->
	<update id="updateState1"  parameterType="hashmap">
		update approval set state1 = #{sign} where appNum=#{appNum}
	</update>
	<update id="updateState2"  parameterType="hashmap">
		update approval set state2 = #{sign} where appNum=#{appNum}
	</update>
	<update id="updateState3"  parameterType="hashmap">
		update approval set state3 = #{sign} where appNum=#{appNum}
	</update>
	
	<!-- 승인시 다음 사람 지목 -->
	<update id="insertAddTake2"  parameterType="approvalDTO">
		update approval set id2 = #{id2} where appNum=#{appNum}
	</update>
	
	<update id="id2" parameterType="Hashmap">
		update approval set name2 = #{name2} where id2=#{id2}
	</update>
	
	
	
	<update id="insertAddTake3"  parameterType="approvalDTO">
		update approval set id3 = #{id3} where appNum=#{appNum}
	</update>
	
	<update id="id3" parameterType="Hashmap">
		update approval set name3 = #{name3} where id3=#{id3}
	</update>

	<!-- 회원 select로 불러오기 
	<select id="getId1" parameterType="userDTO">
		select userId from users where code=#{code}
	</select> -->

	<!-- 결재자에 넣을 유저정보 가져오기 -->
	<select id="getUsersId" parameterType="hashmap" resultType="userDTO">
		select * from users where code=#{code} and userId != #{userId}
	</select>
	
	
	<select id="getApproval" parameterType="int" resultType="approvalDTO">
		select * from approval where appNum=#{appNum}
	</select>
	
	<!-- 시작일 -->
	 <insert id="insertStart" parameterType="hashmap">
		insert into attend(userId, attDate, reason, code, attendance) values(#{userId}, #{appStart}, '휴가시작일', #{code}, '휴가')
	</insert> 
	<!-- 종료일 -->
	 <insert id="insertFinish" parameterType="hashmap">
		insert into attend(userId, attDate, reason, code, attendance) values(#{userId}, #{appFinish}, '휴가종료일', #{code}, '휴가')
	</insert> 
	
</mapper>